{"version":3,"sources":["context.js","header.js","footer.js","about.js","predict.js","picture.js","recommend.js","App.js","context-provider.js","serviceWorker.js","index.js","media/basketball_icon.png","media/Basketball_3.jpg"],"names":["AppContext","React","createContext","HeaderContainer","props","expand","bg","variant","fixed","to","Brand","src","Pic","height","width","alt","Toggle","aria-controls","Collapse","id","className","inline","type","placeholder","FooterContainer","style","color","About","Body","Title","fontSize","Text","Predictor","context","useContext","initialValues","player_first","player_last","location","shot_number","period","shot_clock","dribbles","shot_distance","pts_type","close_def_dist","minutes","seconds","fg","experience","validateOnChange","validateOnBlur","validate","values","errors","onSubmit","actions","a","dict","parseFloat","game_clock","axios","post","JSON","stringify","calcResp","console","log","data","results","result","dict2","addShot","Promise","resolve","setTimeout","form","error","shot","CalculatorForm","display","md","title","name","val0","lab0","val1","val2","lab1","lab2","val3","val4","lab3","lab4","min","max","step","val5","lab5","val6","lab6","val7","lab7","val8","lab8","val9","lab9","val10","lab10","val11","lab11","val12","lab12","val13","lab13","val14","lab14","val15","lab15","val16","lab16","val17","lab17","val18","lab18","val19","lab19","val20","lab20","value","disabled","isSubmitting","as","animation","size","role","aria-hidden","map","p","key","Heading","toFixed","Input","rProps","Group","Label","Control","field","meta","touched","InputYN","label","InputQuarter","InputDrop","match","useRouteMatch","text","params","page","fluid","backgroundImage","backgroundSize","backgroundPosition","marginTop","paddingTop","paddingBottom","myError","fName","lName","Full_Name","toLowerCase","clearPlayers","player1","ppg","player1stats","points","games","rpg","rebounds","apg","assists","per","effeciency","addPlayer","player2","player2stats","dict3","player3","player3stats","dict4","player4","player4stats","players","striped","bordered","hover","App","noGutters","borderRadius","path","backgroundColor","AppProvider","newRes","setState","state","produce","draft","shift","unshift","push","calcCart","Provider","this","Component","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message","module","exports"],"mappings":"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","file":"static/js/main.f4766d82.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst AppContext = React.createContext()\r\nexport default AppContext","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport Pic from './media/basketball_icon.png'\r\n\r\nfunction HeaderContainer(props) {\r\n\r\n    return (\r\n        <bs.Navbar expand=\"lg\" bg=\"dark\" variant=\"dark\" fixed=\"top\">\r\n            <Link to='/' >\r\n                <bs.Navbar.Brand>\r\n                    <bs.Image  src={Pic} height=\"50\" width=\"50\" alt=\"Basketball Logo\"/>\r\n                    {'  '}Basketball Analytics\r\n                </bs.Navbar.Brand>\r\n            </Link>\r\n            <bs.Navbar.Toggle aria-controls=\"basic-Navbar-Nav\" />\r\n            <bs.Navbar.Collapse id=\"basic-Navbar-Nav\">\r\n                <bs.Nav className=\"mr-auto\">\r\n                    <Link to=\"/\" className=\"nav-link\">Predictor</Link>\r\n                    <Link to=\"/recommender\" className=\"nav-link\">Recommender</Link>\r\n                    <Link to=\"/about\" className=\"nav-link\">About</Link>                \r\n                </bs.Nav>\r\n                <bs.Form inline>\r\n                <bs.FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n                <bs.Button variant=\"outline-light\">Search</bs.Button>\r\n                </bs.Form>\r\n            </bs.Navbar.Collapse>\r\n        </bs.Navbar>\r\n    )\r\n}\r\n\r\nexport default HeaderContainer","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\n\r\nfunction FooterContainer(props) {\r\n    return (\r\n        <bs.Container bg=\"dark\" className=\"text-center\" style={{color: 'white'}}>            \r\n            <h6>{'\\u00A9'} Go Fund Me Analytics</h6>\r\n        </bs.Container>\r\n    )\r\n}\r\n\r\nexport default FooterContainer","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\n\r\nfunction About(props) {\r\n    return (\r\n        <bs.Container>\r\n            <bs.Row>\r\n                <bs.Col>\r\n                    <bs.Card.Body>\r\n                        <bs.Card.Title className='text-center mt-3' style={{fontSize: '32pt'}}>\r\n                            About Us\r\n                        </bs.Card.Title>\r\n                        <hr />\r\n                        <bs.Card.Text className='text-center mb-3' style={{fontSize: '20pt'}}>\r\n                            Have you ever wondered what it is like to shoot in a real NBA game? Well we will simulate that experience for you!\r\n                            Just enter the given information and we will tell you how likely you are to make a shot! With the time running down\r\n                            in the fourth quarter will you make the game winning shot? Let's find out!\r\n                        </bs.Card.Text>\r\n                    </bs.Card.Body>\r\n                </bs.Col>\r\n            </bs.Row>\r\n        </bs.Container>\r\n    )\r\n}\r\n\r\nexport default About","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\nimport { Formik, Form, Field} from 'formik'\r\nimport AppContext from './context'\r\nimport axios from 'axios'\r\n\r\n\r\nfunction Predictor(props) {\r\n    let context = React.useContext(AppContext)\r\n    let myError = ''\r\n\r\n    return (        \r\n        <Formik\r\n            initialValues={{\r\n                player_first: 'Yoeli',\r\n                player_last: 'Childs',\r\n                location: 'H',\r\n                shot_number: 7,\r\n                period: '4',\r\n                shot_clock: 8.7,\r\n                dribbles: 4,\r\n                shot_distance: 20.9,\r\n                pts_type: '2',\r\n                close_def_dist: 1.8,\r\n                minutes: 9,\r\n                seconds: 46,\r\n                fg: 78.1,\r\n                experience: '5',\r\n            }}\r\n            validateOnChange={false}\r\n            validateOnBlur={false}\r\n            validate={values => {\r\n                const errors = {}\r\n\r\n                if (values.player_first === '') {\r\n                    errors.player_first = 'Please enter a First Name'\r\n                }\r\n                if (values.player_last === '') {\r\n                    errors.player_last = 'Please enter a Last Name'\r\n                }\r\n                if (values.location === '') {\r\n                    errors.location = 'Please enter Home or Away'\r\n                }\r\n                if (values.shot_number === '') {\r\n                    errors.shot_number = 'Please enter a valid shot number'\r\n                }\r\n                if (values.period === '') {\r\n                    errors.period = 'Please choose quarter'\r\n                }\r\n                if (values.shot_clock === '') {\r\n                    errors.shot_clock = 'Please enter valid number 0 to 24'\r\n                }\r\n                if (values.dribbles === '') {\r\n                    errors.dribbles = 'Please enter a valid number'\r\n                }\r\n                if (values.pts_type === '') {\r\n                    errors.pts_type = 'Please select 2 or 3'\r\n                }\r\n                if (values.close_def_dist === '') {\r\n                    errors.close_def_dist = 'Please enter distance'\r\n                }\r\n                if (values.minutes === '') {\r\n                    errors.minutes = 'Please enter valid number 0 to 12'\r\n                }\r\n                if (values.seconds === '') {\r\n                    errors.seconds = 'Please enter valid number 0 to 59'\r\n                }\r\n                if (values.fg === '') {\r\n                    errors.fg = 'Please enter proper fg% 0 to 100'\r\n                }\r\n                if (values.experience === '') {\r\n                    errors.experience = 'Please enter valid experience R to 20'\r\n                }\r\n                return errors // This is the way\r\n            }}\r\n            onSubmit={async (values, actions) => {\r\n                //console.log('submit', values)             \r\n\r\n                if (values.shot_distance > 23.75) {\r\n                    values.pts_type = '3'\r\n                }\r\n\r\n                let dict = {\r\n                    player_first: values.player_first,\r\n                    player_last: values.player_last,\r\n                    location: values.location,\r\n                    shot_number: values.shot_number,\r\n                    period: values.period,                    \r\n                    shot_clock: parseFloat(values.shot_clock),\r\n                    dribbles: values.dribbles,\r\n                    shot_distance: parseFloat(values.shot_distance),\r\n                    pts_type: values.pts_type,\r\n                    close_def_dist: parseFloat(values.close_def_dist),\r\n                    game_clock: ((values.minutes * 60) + values.seconds),\r\n                    fg: parseFloat(values.fg),\r\n                    experience: values.experience,\r\n                }\r\n\r\n                // console.log(dict)\r\n                // console.log('player_first ', dict.player_first, typeof dict.player_first)\r\n                // console.log('player_last ', dict.player_last, typeof dict.player_last)\r\n                // console.log('location ', dict.location, typeof dict.location)\r\n                // console.log('shot_number ', dict.shot_number, typeof dict.shot_number)\r\n                // console.log('period ', dict.period, typeof dict.period)\r\n                // console.log('shot_clock ', dict.shot_clock, typeof dict.shot_clock)\r\n                // console.log('shot_distance ', dict.shot_distance, typeof dict.shot_distance)\r\n                // console.log('pts_type ', dict.pts_type, typeof dict.pts_type)\r\n                // console.log('close_def_dist ', dict.close_def_dist, typeof dict.close_def_dist)\r\n                // console.log('game_clock ', dict.game_clock, typeof dict.game_clock)\r\n                // console.log('fg ', dict.fg, typeof dict.fg)\r\n                // console.log('experience ', dict.experience, typeof dict.experience)\r\n\r\n\r\n                // Put axios call to API here:\r\n                let calcResp\r\n                try {\r\n                    calcResp = await axios.post(`http://ec2-18-234-190-213.compute-1.amazonaws.com:8000/api/getShotPrediction/`, JSON.stringify(dict))\r\n                }\r\n                catch(err) {\r\n                    console.log(err)\r\n                }\r\n                \r\n                console.log('RESPONSE 1:', calcResp.data)\r\n                let results = ''\r\n                if (calcResp.data.result > 0.5) {\r\n                    results = 'success'\r\n                }\r\n                else {\r\n                    results = 'danger'\r\n                }\r\n\r\n                let dict2 = {\r\n                    result: calcResp.data.result,\r\n                    type: results\r\n                }\r\n                //console.log(dict2)\r\n                context.addShot(dict2)\r\n\r\n                await new Promise(resolve => {\r\n                    setTimeout(() => {  // wait 2 seconds, then set the form as \"not submitting\"\r\n                        resolve()\r\n                    }, 2000)\r\n                })\r\n            }}\r\n        >{form => (\r\n            <CalculatorForm form={form} error={myError} results={context.shot}/>            \r\n        )}</Formik>        \r\n    )\r\n}\r\nexport default Predictor\r\n\r\n\r\n/**\r\n * The form layout/html.\r\n * This component needs finishing.\r\n */\r\nconst CalculatorForm = props => (\r\n\r\n    <bs.Container>\r\n        <h1 className=\"pt-4\" style={{display: 'inline-block'}}>\r\n            Shot Predictor\r\n        </h1>\r\n        <hr />\r\n        <h6 className=\"text-danger\">{props.error}</h6> \r\n        <Form>\r\n            <bs.Row className=\"mb-4\">\r\n                <bs.Col md=\"6\">\r\n                    <bs.Row>\r\n                        <bs.Col>\r\n                            <Input title=\"Player First Name:\" name=\"player_first\" type=\"text\" />\r\n                        </bs.Col>\r\n                        <bs.Col>\r\n                            <Input title=\"Player Last Name:\" name=\"player_last\" type=\"text\" />\r\n                        </bs.Col>\r\n                    </bs.Row>\r\n                    <InputYN title=\"Home or Away:\" name=\"location\" type=\"select\" val0=\"\" lab0=\"Select One\"\r\n                        val1=\"H\" val2=\"A\" lab1=\"Home\" lab2=\"Away\" \r\n                    />\r\n                    <InputQuarter title=\"Quarter:\" name=\"period\" type=\"select\" val0=\"\" lab0=\"Select Quarter\"\r\n                        val1=\"1\" val2=\"2\" val3=\"3\" val4=\"4\" lab1=\"1st\" lab2=\"2nd\" lab3=\"3rd\" lab4=\"4th\"\r\n                    />\r\n                    <bs.Row>\r\n                        <bs.Col>\r\n                            <Input title=\"Minutes:\" name=\"minutes\" type=\"number\" min=\"0\" max=\"11\" step=\"1\"/>\r\n                        </bs.Col>\r\n                        <bs.Col>\r\n                            <Input title=\"Seconds:\" name=\"seconds\" type=\"number\" min=\"0\" max=\"59\" step=\"1\"/>\r\n                        </bs.Col>\r\n                    </bs.Row>\r\n                    <Input title=\"Time Left on Shot Clock:\" name=\"shot_clock\" type=\"number\" min=\"0.1\" max=\"24.0\" step=\"0.1\"/>                    \r\n                </bs.Col>\r\n                <bs.Col md=\"6\">\r\n                    <InputDrop title=\"Years in the NBA:\" name=\"experience\" type=\"select\" val0=\"\" lab0=\"Select Year\" \r\n                        val1=\"R\" lab1=\"Rookie\" val2=\"2\" lab2=\"2\" val3=\"3\" lab3=\"3\" val4=\"4\" lab4=\"4\" val5=\"5\" lab5=\"5\" val6=\"6\" lab6=\"6\"\r\n                        val7=\"7\" lab7=\"7\" val8=\"8\" lab8=\"8\" val9=\"9\" lab9=\"9\" val10=\"10\" lab10=\"10\"\r\n                        val11=\"11\" lab11=\"11\" val12=\"12\" lab12=\"12\" val13=\"13\" lab13=\"13\" val14=\"14\" lab14=\"14\" val15=\"15\" lab15=\"15\" val16=\"16\" lab16=\"16\"\r\n                        val17=\"17\" lab17=\"17\" val18=\"18\" lab18=\"18\" val19=\"19\" lab19=\"19\" val20=\"20\" lab20=\"20+\"\r\n                    />                    \r\n                    <bs.Row>\r\n                        <bs.Col>\r\n                            <Input title=\"Shot Number:\" name=\"shot_number\" type=\"number\" />\r\n                        </bs.Col>    \r\n                        <bs.Col>\r\n                            <Input title=\"Dribbles Before Shot:\" name=\"dribbles\" type=\"number\" />\r\n                        </bs.Col>\r\n                    </bs.Row>\r\n                    <Input title=\"Shot Distance (feet):\" name=\"shot_distance\" type=\"number\" min=\"0\" max=\"94\" step=\"0.1\" />\r\n                    <Input name=\"pts_type\" type=\"hidden\" value='2'/>\r\n                    <Input title=\"Player Field Goal Percentage:\" name=\"fg\" type=\"number\" min=\"0\" max=\"100\" step=\"0.1\"/>\r\n                    <Input title=\"Distance to Closest Defender (feet):\" name=\"close_def_dist\" type=\"number\" min=\"0\" max=\"94\" step=\"0.1\" />                    \r\n                </bs.Col>\r\n            </bs.Row>\r\n            <bs.Row className=\"mb-4\">\r\n                <bs.Col>\r\n                    <bs.Container className=\"text-center\">\r\n                        <bs.Button className=\"btn btn-lg btn-primary\" type=\"submit\" disabled={props.form.isSubmitting}>\r\n                            {props.form.isSubmitting &&\r\n                                <bs.Spinner as=\"span\" animation=\"grow\" size=\"lg\" role=\"status\" aria-hidden=\"true\" />                     \r\n                            } Predict Shot\r\n                        </bs.Button>\r\n                    </bs.Container>\r\n                </bs.Col>\r\n            </bs.Row>\r\n            <bs.Row className=\"mb-4\">\r\n                <bs.Col className=\"text-center\">\r\n                    {props.results.map((p) => {\r\n                        if (p.type === 'success') {                            \r\n                            return(\r\n                                <bs.Alert variant=\"success\" key={p.result}>\r\n                                    <bs.Alert.Heading>Buckets! It went in!</bs.Alert.Heading>\r\n                                    <p className=\"mb-1\">The player that you have described taking this shot is probably going to make it!</p> \r\n                                    <p>Now try and mix up the stats to see if you can improve your percentage!</p>\r\n                                    <hr />\r\n                                    <p>This shot has a <strong>{(p.result * 100).toFixed(2)}%</strong> chance to be a make!</p>\r\n                                </bs.Alert>\r\n                            )\r\n                        }\r\n                        if (p.type === 'danger') {\r\n                            return(\r\n                                <bs.Alert variant=\"danger\" key={p.result}>\r\n                                    <bs.Alert.Heading>Brick! This shot missed...</bs.Alert.Heading>\r\n                                    <p className=\"mb-1\">This is a really tough shot and it will probably be a miss. But dont give up!</p>\r\n                                    <p>Change up the situation and the stats and maybe you can find the right combination!</p>\r\n                                    <hr />\r\n                                    <p>This shot only has a <strong>{(p.result * 100).toFixed(2)}%</strong> chance to be a make.</p>\r\n                                </bs.Alert>\r\n                            )\r\n                        }\r\n                        \r\n                        return(\r\n                            <bs.Alert variant=\"info\" key={p.result}>\r\n                                <bs.Alert.Heading>Enter the Info Above to View Results</bs.Alert.Heading>\r\n                                <p className=\"mb-1\">We will display your results here!</p> \r\n                                <hr />\r\n                                <p>This shot has a <strong>{(p.result * 100).toFixed(2)}%</strong> chance to be a make!</p>\r\n                            </bs.Alert>\r\n                        )\r\n                    })}\r\n                </bs.Col>\r\n            </bs.Row>\r\n        </Form>       \r\n    </bs.Container>\r\n)\r\n\r\n/**\r\n * A form input.\r\n *   props.title - the title that shows above the input box\r\n *   props.type - the type of input (see React Bootstrap Form.Control)\r\n *   props.placeholder - placeholder text in the input.\r\n * This component is finished and doesn't need additional work.\r\n */\r\nconst Input = (props) => (\r\n    <Field name={props.name}>{rProps => (\r\n        <bs.Form.Group>\r\n            {props.title &&\r\n                <bs.Form.Label>{props.title}</bs.Form.Label>\r\n            }\r\n            <bs.Form.Control\r\n                type={props.type}\r\n                placeholder={props.placeholder}\r\n                disabled={rProps.form.isSubmitting}\r\n                value={props.value}\r\n                min={props.min}\r\n                max={props.max}\r\n                step={props.step}\r\n                {...rProps.field}\r\n            />\r\n            {rProps.meta.touched && rProps.meta.error &&\r\n                <div className=\"text-danger\">{rProps.meta.error}</div>\r\n            }\r\n        </bs.Form.Group>\r\n    )}</Field>\r\n)\r\n\r\nconst InputYN = (props) => (\r\n    <Field name={props.name}>{rProps => (\r\n        <bs.Form.Group>\r\n            {props.title &&\r\n                <bs.Form.Label>{props.title}</bs.Form.Label>\r\n            }        \r\n            <br />\r\n            <bs.Form.Control as={props.type}\r\n                placeholder={props.placeholder}\r\n                disabled={rProps.form.isSubmitting}\r\n                {...rProps.field}\r\n            >\r\n                <option value={props.val0} label={props.lab0}/>\r\n                <option value={props.val1} label={props.lab1}/>\r\n                <option value={props.val2} label={props.lab2}/>\r\n            </bs.Form.Control>\r\n            {rProps.meta.touched && rProps.meta.error &&\r\n                <div className=\"text-danger\">{rProps.meta.error}</div>\r\n            }\r\n        </bs.Form.Group>\r\n    )}</Field>\r\n)\r\n\r\nconst InputQuarter = (props) => (\r\n    <Field name={props.name}>{rProps => (\r\n        <bs.Form.Group>\r\n            {props.title &&\r\n                <bs.Form.Label>{props.title}</bs.Form.Label>\r\n            }        \r\n            <br />\r\n            <bs.Form.Control as={props.type}\r\n                placeholder={props.placeholder}\r\n                disabled={rProps.form.isSubmitting}\r\n                {...rProps.field}\r\n            >\r\n                <option value={props.val0} label={props.lab0}/>\r\n                <option value={props.val1} label={props.lab1}/>\r\n                <option value={props.val2} label={props.lab2}/>\r\n                <option value={props.val3} label={props.lab3}/>\r\n                <option value={props.val4} label={props.lab4}/>\r\n            </bs.Form.Control>\r\n            {rProps.meta.touched && rProps.meta.error &&\r\n                <div className=\"text-danger\">{rProps.meta.error}</div>\r\n            }\r\n        </bs.Form.Group>\r\n    )}</Field>\r\n)\r\n\r\nconst InputDrop = (props) => (\r\n    <Field name={props.name}>{rProps => (\r\n        <bs.Form.Group>\r\n            {props.title &&\r\n                <bs.Form.Label>{props.title}</bs.Form.Label>\r\n            }\r\n            <br />\r\n            <bs.Form.Control as={props.type}\r\n                placeholder={props.placeholder}\r\n                disabled={rProps.form.isSubmitting}\r\n                {...rProps.field}\r\n            >\r\n                <option value={props.val0} label={props.lab0}/>\r\n                <option value={props.val1} label={props.lab1}/>\r\n                <option value={props.val2} label={props.lab2}/>\r\n                <option value={props.val3} label={props.lab3}/>\r\n                <option value={props.val4} label={props.lab4}/>\r\n                <option value={props.val5} label={props.lab5}/>\r\n                <option value={props.val6} label={props.lab6}/>\r\n                <option value={props.val7} label={props.lab7}/>\r\n                <option value={props.val8} label={props.lab8}/>\r\n                <option value={props.val9} label={props.lab9}/>\r\n                <option value={props.val10} label={props.lab10}/>\r\n                <option value={props.val11} label={props.lab11}/>\r\n                <option value={props.val12} label={props.lab12}/>\r\n                <option value={props.val13} label={props.lab13}/>\r\n                <option value={props.val14} label={props.lab14}/>\r\n                <option value={props.val15} label={props.lab15}/>\r\n                <option value={props.val16} label={props.lab16}/>\r\n                <option value={props.val17} label={props.lab17}/>\r\n                <option value={props.val18} label={props.lab18}/>\r\n                <option value={props.val19} label={props.lab19}/>\r\n                <option value={props.val20} label={props.lab20}/>\r\n                \r\n            </bs.Form.Control>\r\n            {rProps.meta.touched && rProps.meta.error &&\r\n                <div className=\"text-danger\">{rProps.meta.error}</div>\r\n            }\r\n        </bs.Form.Group>\r\n    )}</Field>\r\n)","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\nimport Pic from './media/Basketball_3.jpg'\r\nimport { useRouteMatch } from 'react-router-dom'\r\n\r\nfunction HeaderContainer(props) {\r\n    let match = useRouteMatch('/:page')\r\n    let text = ''\r\n    //console.log(match)\r\n\r\n    if (match === null) {\r\n        text = 'Shot Predictor'\r\n    }\r\n    else if (match.params.page === 'recommender') {\r\n        text = 'Similar Players'\r\n    }\r\n    else {\r\n        text = 'Shot Predictor'\r\n    }    \r\n\r\n    return (        \r\n        <bs.Jumbotron fluid style={{backgroundImage: `url(${Pic})`, backgroundSize: 'cover', backgroundPosition: 'center', marginTop: \"76px\", paddingTop: '175px', paddingBottom: '200px'}}>\r\n            <bs.Row>\r\n                <bs.Col md='1' />\r\n                <bs.Col md='3'>\r\n                    <bs.Container>\r\n                        <h1 style={{color: '#ffc107', fontSize: '100px'}}>{text}</h1>\r\n                    </bs.Container>\r\n                </bs.Col>\r\n                <bs.Col md='8' />\r\n            </bs.Row>            \r\n        </bs.Jumbotron>                   \r\n    )\r\n}\r\n\r\nexport default HeaderContainer","import React from 'react'\r\nimport * as bs from 'react-bootstrap'\r\nimport { Formik, Form, Field} from 'formik'\r\nimport AppContext from './context'\r\nimport axios from 'axios'\r\n\r\n\r\nfunction Predictor(props) {\r\n    let context = React.useContext(AppContext)\r\n    let myError = ''\r\n\r\n    return (        \r\n        <Formik\r\n            initialValues={{\r\n                fName: 'Lebron',\r\n                lName: 'James',\r\n            }}\r\n            validateOnChange={false}\r\n            validateOnBlur={false}\r\n            validate={values => {\r\n                const errors = {}\r\n\r\n                if (values.fName === '') {\r\n                    errors.fName = 'Please enter a first name'\r\n                }\r\n                if (values.lName === '') {\r\n                    errors.lName = 'Please enter a last name'\r\n                }\r\n                return errors // This is the way\r\n            }}\r\n            onSubmit={async (values, actions) => {\r\n                console.log('submit', values)                \r\n\r\n                let data = {\r\n                    Full_Name: values.fName.toLowerCase() + ' ' + values.lName.toLowerCase(),\r\n                }\r\n                \r\n                // Put axios call to API here:\r\n                let calcResp\r\n                try {\r\n                    calcResp = await axios.post(`http://ec2-18-234-190-213.compute-1.amazonaws.com:8000/api/getPlayerRecommendation/`, JSON.stringify(data))\r\n\r\n                    context.clearPlayers()\r\n\r\n                    let dict = {\r\n                        name: calcResp.data.player1,\r\n                        ppg: (calcResp.data.player1stats.points / calcResp.data.player1stats.games).toFixed(2),\r\n                        rpg: (calcResp.data.player1stats.rebounds / calcResp.data.player1stats.games).toFixed(2),\r\n                        apg: (calcResp.data.player1stats.assists / calcResp.data.player1stats.games).toFixed(2),\r\n                        per: (calcResp.data.player1stats.effeciency / calcResp.data.player1stats.games).toFixed(2),\r\n                    }\r\n                    \r\n                    context.addPlayer(dict)\r\n    \r\n                    let dict2 = {\r\n                        name: calcResp.data.player2,\r\n                        ppg: (calcResp.data.player2stats.points / calcResp.data.player2stats.games).toFixed(2),\r\n                        rpg: (calcResp.data.player2stats.rebounds / calcResp.data.player2stats.games).toFixed(2),\r\n                        apg: (calcResp.data.player2stats.assists / calcResp.data.player2stats.games).toFixed(2),\r\n                        per: (calcResp.data.player2stats.effeciency / calcResp.data.player2stats.games).toFixed(2),\r\n                    }\r\n                    \r\n                    context.addPlayer(dict2)\r\n                    \r\n                    let dict3 = {\r\n                        name: calcResp.data.player3,\r\n                        ppg: (calcResp.data.player3stats.points / calcResp.data.player3stats.games).toFixed(2),\r\n                        rpg: (calcResp.data.player3stats.rebounds / calcResp.data.player3stats.games).toFixed(2),\r\n                        apg: (calcResp.data.player3stats.assists / calcResp.data.player3stats.games).toFixed(2),\r\n                        per: (calcResp.data.player3stats.effeciency / calcResp.data.player3stats.games).toFixed(2),\r\n                    }\r\n                    \r\n                    context.addPlayer(dict3)\r\n\r\n                    let dict4 = {\r\n                        name: calcResp.data.player4,\r\n                        ppg: (calcResp.data.player4stats.points / calcResp.data.player4stats.games).toFixed(2),\r\n                        rpg: (calcResp.data.player4stats.rebounds / calcResp.data.player4stats.games).toFixed(2),\r\n                        apg: (calcResp.data.player4stats.assists / calcResp.data.player4stats.games).toFixed(2),\r\n                        per: (calcResp.data.player4stats.effeciency / calcResp.data.player4stats.games).toFixed(2),\r\n                    }\r\n                    \r\n                    context.addPlayer(dict4)\r\n                }\r\n                catch(err) {\r\n                    //console.log(err)\r\n                    myError = 'This player was not found in the 2014-2015 season data'\r\n                }\r\n\r\n                \r\n\r\n                await new Promise(resolve => {\r\n                    setTimeout(() => {  // wait 2 seconds, then set the form as \"not submitting\"\r\n                        resolve()\r\n                    }, 2000)\r\n                })\r\n            }}\r\n        >{form => (\r\n            <CalculatorForm form={form} error={myError} results={context.players}/>            \r\n        )}</Formik>        \r\n    )\r\n}\r\nexport default Predictor\r\n\r\n\r\n/**\r\n * The form layout/html.\r\n * This component needs finishing.\r\n */\r\nconst CalculatorForm = props => (\r\n\r\n    <bs.Container>\r\n        <h1 className=\"pt-4\" style={{display: 'inline-block'}}>\r\n            Player Recommender\r\n        </h1>\r\n        <hr />\r\n        <h6 className=\"text-danger\">{props.error}</h6> \r\n        <Form>\r\n            <bs.Row className=\"mb-4\">\r\n                <bs.Col md=\"6\">\r\n                    <Input title=\"First Name:\" name=\"fName\" type=\"text\" />\r\n                </bs.Col>\r\n                <bs.Col md=\"6\">\r\n                    <Input title=\"Last Name:\" name=\"lName\" type=\"text\" />\r\n                </bs.Col>\r\n            </bs.Row>\r\n            <bs.Row className=\"mb-4\">\r\n                <bs.Col>\r\n                    <bs.Container className=\"text-center\">\r\n                        <bs.Button className=\"btn btn-lg btn-primary\" type=\"submit\" disabled={props.form.isSubmitting}>\r\n                            {props.form.isSubmitting &&\r\n                                <bs.Spinner as=\"span\" animation=\"grow\" size=\"lg\" role=\"status\" aria-hidden=\"true\" />                     \r\n                            } Find Similar Players\r\n                        </bs.Button>\r\n                    </bs.Container>\r\n                </bs.Col>\r\n            </bs.Row>\r\n            <bs.Row className=\"mb-4\">\r\n                <bs.Col md=\"3\"/>\r\n                <bs.Col md=\"6\" className=\"text-center\">\r\n                    <h1>Results Here</h1>\r\n                    <bs.Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                            <tr style={{color: \"#ffc107\"}}>\r\n                                <th >\r\n                                    Player\r\n                                </th>\r\n                                <th>PPG</th>\r\n                                <th>RPG</th>\r\n                                <th>APG</th>\r\n                                <th>PER</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {props.results.map((p) => {\r\n                                return(\r\n                                    <tr key={p.name}>\r\n                                        <td>{p.name}</td>\r\n                                        <td>{p.ppg}</td>\r\n                                        <td>{p.rpg}</td>\r\n                                        <td>{p.apg}</td>\r\n                                        <td>{p.per}</td>\r\n                                    </tr>\r\n                                )\r\n                            })}\r\n                        </tbody>\r\n                    </bs.Table>\r\n                </bs.Col>\r\n                <bs.Col md=\"3\"/>\r\n            </bs.Row>\r\n        </Form>       \r\n    </bs.Container>\r\n)\r\n\r\n/**\r\n * A form input.\r\n *   props.title - the title that shows above the input box\r\n *   props.type - the type of input (see React Bootstrap Form.Control)\r\n *   props.placeholder - placeholder text in the input.\r\n * This component is finished and doesn't need additional work.\r\n */\r\nconst Input = (props) => (\r\n    <Field name={props.name}>{rProps => (\r\n        <bs.Form.Group>\r\n            {props.title &&\r\n                <bs.Form.Label>{props.title}</bs.Form.Label>\r\n            }\r\n            <bs.Form.Control\r\n                type={props.type}\r\n                placeholder={props.placeholder}\r\n                disabled={rProps.form.isSubmitting}\r\n                value={props.value}\r\n                {...rProps.field}\r\n            />\r\n            {rProps.meta.touched && rProps.meta.error &&\r\n                <div className=\"text-danger\">{rProps.meta.error}</div>\r\n            }\r\n        </bs.Form.Group>\r\n    )}</Field>\r\n)","import React from 'react';\r\nimport * as bs from 'react-bootstrap'\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\r\nimport HeaderContainer from './header'\r\nimport FooterContainer from './footer'\r\nimport About from './about'\r\nimport Predictor from './predict'\r\nimport PicContainer from './picture'\r\nimport Recommender from './recommend'\r\nimport './App.scss'\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Router>\r\n      <bs.Container fluid className=\"p-0 min-vh-100 d-flex flex-column\">\r\n        <bs.Row noGutters className=\"flex-grow-0 flex-shrink-0 shadow-sm\">\r\n          <bs.Col>\r\n            <HeaderContainer />\r\n          </bs.Col>\r\n        </bs.Row>\r\n        <bs.Row>\r\n          <bs.Col>\r\n            <PicContainer />\r\n          </bs.Col>\r\n        </bs.Row>\r\n        <bs.Row noGutters style={{marginTop: \"-120px\"}}>\r\n          <bs.Col md=\"1\" />\r\n          <bs.Col md=\"10\">\r\n            <bs.Card className=\"shadow-lg mb-4\" style={{borderRadius: \"20px\"}}>\r\n              <Switch>\r\n                <Route path=\"/about\">\r\n                  <About />\r\n                </Route>\r\n                <Route path=\"/recommender\">\r\n                  <Recommender />\r\n                </Route>\r\n                <Route path=\"/\">\r\n                  <Predictor />                \r\n                </Route>\r\n              </Switch>\r\n            </bs.Card>\r\n          </bs.Col>\r\n          <bs.Col md=\"1\" />\r\n        </bs.Row>\r\n        <bs.Row noGutters>\r\n          <bs.Col className=\"py-2\" style={{backgroundColor: \"#343a40\"}}>\r\n            <FooterContainer />\r\n          </bs.Col>\r\n        </bs.Row>\r\n      </bs.Container>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react'\r\n//import axios from 'axios'\r\nimport AppContext from './context'\r\nimport App from './App'\r\nimport produce from 'immer'\r\n\r\n/** The context provider for our app */\r\nexport default class AppProvider extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.actions = {\r\n            // Functions Here\r\n            addShot: this.addShot,\r\n            addPlayer: this.addPlayer,\r\n            clearPlayers: this.clearPlayers,\r\n        }\r\n        this.state = {\r\n            // Attributes here\r\n            calcCart: [],\r\n            shot: [{result: 0, type: 'info'}],\r\n            players : [{name: 'Yoeli Childs', ppg: 15, rpg: 8, apg: 4, per: 27.67}],\r\n        }\r\n        // Do not load data (the categories) here or else it would freeze the system\r\n    }\r\n    // Put Methods here\r\n\r\n    addShot = (results) => {\r\n        let newRes = results\r\n        this.setState(state => produce(state, draft => {\r\n            draft.shot.shift()            \r\n            draft.shot.unshift(newRes)\r\n        }))\r\n    }\r\n\r\n    clearPlayers = () => {        \r\n        this.setState(state => produce(state, draft => {\r\n            draft.players = []            \r\n        }))\r\n    }\r\n\r\n    addPlayer = (results) => {\r\n        let newRes = results\r\n        this.setState(state => produce(state, draft => {\r\n            draft.players.push(newRes)\r\n        }))\r\n    }\r\n  \r\n    render() {\r\n        return (\r\n            <AppContext.Provider value={{...this.state, ...this.actions}}> \r\n                <App />\r\n            </AppContext.Provider>\r\n        )\r\n    }\r\n\r\n    async componentDidMount() {\r\n        \r\n        // Axios calls here\r\n\r\n        this.setState({            \r\n            // Set attributes here\r\n        })\r\n    }\r\n\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './index.scss';\nimport AppProvider from './context-provider';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<AppProvider />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/basketball_icon.2bfb11da.png\";","module.exports = __webpack_public_path__ + \"static/media/Basketball_3.b360f230.jpg\";"],"sourceRoot":""}